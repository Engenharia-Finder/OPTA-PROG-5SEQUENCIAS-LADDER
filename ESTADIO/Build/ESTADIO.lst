***********************************************************************
*
*	CODE GENERATION LISTING FOR: ESTADIO
*	COMPILER VERSION: 5.22.0.18
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
300000D0  FB90 F3F1		sdiv r3, r0, r1
300000D4  4359     		mul r1, r1, r3
300000D6  EBC1 0000		rsb r0, r1, r0
300000DA  4770     		bx lr

$$MOD_U:
300000DC  FBB0 F3F1		udiv r3, r0, r1
300000E0  4359     		mul r1, r1, r3
300000E2  EBC1 0000		rsb r0, r1, r0
300000E6  4770     		bx lr

**************************************************
	List function block: CTU
**************************************************

FUNCTION_BLOCK CTU

	{ DE:"<HTML>The CTU block <b>counts up</b> for each FALSE-to-TRUE transition of the input CU and sets the output Q when the accumulated value (CV) reaches the preset value (PV) value.<br/>
<img src= ctuscheme.png>
<ul>
<li>rising edge of R reset CV to 0</li>
<li>rising edge of CU increments CV by 1</li>
<li>when CV reaches PV the output Q is set</li>
<li>once CV is equal to PV its value remains until a rising edge of R</li>
</ul>" }

        VAR_INPUT
CU : BOOL;	{ DE:"Count-up on input rising edge" }
R : BOOL;	{ DE:"Reset counter input" }
PV : INT;	{ DE:"Preset value" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Count-up output" }
CV : INT;	{ DE:"Counter current value" }
	END_VAR

        VAR
CUEDGE : BOOL;
MEMCU : BOOL;
	END_VAR

END_FUNCTION_BLOCK

300000E8  E92D 4040		stmdb sp!, { r6, lr }
300000EC  462E     		mov r6, r5

#0		{SRC:CTU}
#1		
#2			(*	Check for reset input *)
#3			LD		R
(-) UNDEF
300000EE  78F0     		ldrb r0, [r6, #3]

#4			JMPCN	l0
(-) BOOL
300000F0  2800     		cmp r0, #0
300000F2  D004     		beq #8 ; 0x300000FE


#5			
#6			LD		0
(-) UNDEF
300000F6  2000     		mov r0, #0 ; 0

#7			ST		CV
(-) USINT
300000F8  8130     		strh r0, [r6, #8]

#8			JMP		l1
(-) INT
300000FA  E027     		b #78 ; 0x3000014C


#9		
#10			(*	Check for increment enable *)
#11		l0:
#12			LD		CU
(-) UNDEF
300000FE  78B0     		ldrb r0, [r6, #2]

#13			ANDN 	MEMCU
(*) BOOL
30000100  7877     		ldrb r7, [r6, #1]
30000102  2F00     		cmp r7, #0
30000104  BF08 2701		eqmov r7, #1
30000108  BF18 2700		nemov r7, #0
3000010C  4038     		and r0, r0, r7

#14			ST 		CUEDGE
(-) BOOL
3000010E  7030     		strb r0, [r6]

#15			
#16			LD 		CU
(-) UNDEF
30000110  78B0     		ldrb r0, [r6, #2]

#17			ST 		MEMCU
(-) BOOL
30000112  7070     		strb r0, [r6, #1]

#18			
#19			LD 		CUEDGE
(-) UNDEF
30000114  7830     		ldrb r0, [r6]

#20			AND(	CV
(*) BOOL
30000116  B082     		sub sp, sp, #8
30000118  F8CD 0000		str r0, [sp]
3000011C  F8DF 7050		ldr r7, [pc, #+80] ; 0x8
30000120  5FF0     		ldrsh r0, [r6, +r7]

#21			LT		16#7FFF
(*) INT
30000122  F8DF 7050		ldr r7, [pc, #+80] ; 0x7FFF
30000126  463F     		mov r7, r7
30000128  42B8     		cmp r0, r7
3000012A  BFA8 2000		gemov r0, #0
3000012E  BFB8 2001		ltmov r0, #1

#22			)
#23			JMPCN	l1
(*) BOOL
30000132  4607     		mov r7, r0
30000134  F8DD 0000		ldr r0, [sp]
30000138  B002     		add sp, sp, #8
3000013A  4038     		and r0, r0, r7

(-) BOOL
3000013C  2800     		cmp r0, #0
3000013E  D005     		beq #10 ; 0x3000014C


#24			
#25			LD		CV
(*) UNDEF
30000142  F8DF 702C		ldr r7, [pc, #+44] ; 0x8
30000146  5FF0     		ldrsh r0, [r6, +r7]

#26			ADD		1
(-) INT
30000148  1C40     		add r0, r0, #1

#27			ST		CV
(-) INT
3000014A  8130     		strh r0, [r6, #8]

#28			
#29		l1:
#30		
#31			(*	Counter output	*)
#32			LD		CV
(*) UNDEF
3000014C  F8DF 7020		ldr r7, [pc, #+32] ; 0x8
30000150  5FF0     		ldrsh r0, [r6, +r7]

#33			GE		PV
(*) INT
30000152  F8DF 7018		ldr r7, [pc, #+24] ; 0x4
30000156  5FF7     		ldrsh r7, [r6, +r7]
30000158  42B8     		cmp r0, r7
3000015A  BFB8 2000		ltmov r0, #0
3000015E  BFA8 2001		gemov r0, #1

#34			ST		Q
(-) BOOL
30000162  71B0     		strb r0, [r6, #6]

30000164  E8BD 4040		ldmia sp!, { r6, lr }

30000168  4770     		bx lr

3000016C  00000004		; 0x00000004
30000170  00000008		; 0x00000008
30000174  00007FFF		; 0x00007FFF


Frame allocation:

	0000 bit  0: VAR CUEDGE
	0001 bit  0: VAR MEMCU
	0002 bit  0: VAR CU
	0003 bit  0: VAR R
	0004       : VAR PV
	0006 bit  0: VAR Q
	0008       : VAR CV

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

30000180  B082     		sub sp, sp, #8
30000182  F8CD E000		str lr, [sp]
30000186  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
3000018A  F8DF 701C		ldr r7, [pc, #+28] ; 0x24002BD8
3000018E  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
30000192  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
30000194  F8DF 7010		ldr r7, [pc, #+16] ; 0x24002BD8
30000198  8038     		strh r0, [r7]

3000019A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000019E  F8DD E000		ldr lr, [sp]
300001A2  B002     		add sp, sp, #8

300001A4  4770     		bx lr

300001A8  24002BD8		; 0x24002BD8

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
300001AC  4770     		bx lr


*** OUTPUT:
300001AE  4770     		bx lr



**************************************************
	Task Fast init code
**************************************************

300001B0  B082     		sub sp, sp, #8
300001B2  F8CD E000		str lr, [sp]
300001B6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

300001BA  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300001BE  F8DD E000		ldr lr, [sp]
300001C2  B002     		add sp, sp, #8

300001C4  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

300001D0  B082     		sub sp, sp, #8
300001D2  F8CD E000		str lr, [sp]
300001D6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 0; *)
#4			MOVE		0,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
300001DA  2000     		mov r0, #0 ; 0
300001DC  F8DF 7058		ldr r7, [pc, #+88] ; 0x24002BD4
300001E0  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( TO_DWORD( 0 ), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); *)
#7			LDP0		0	{LNXT:5|3|-1}
(-) UDINT
#8			TO_DWORD	{LNXT:5|3|-1}
(-) USINT
300001E2  2000     		mov r0, #0 ; 0

#9			sysDBase_SetExtTable		0, 0, 0, 0, 0, 0, 0, 0, 0, 0	{LNXT:5|3|-1}
(*) DWORD
300001E4  B088     		sub sp, sp, #32
300001E6  2700     		mov r7, #0 ; 0
300001E8  4639     		mov r1, r7
300001EA  2700     		mov r7, #0 ; 0
300001EC  463A     		mov r2, r7
300001EE  2700     		mov r7, #0 ; 0
300001F0  463B     		mov r3, r7
300001F2  2700     		mov r7, #0 ; 0
300001F4  F8CD 7000		str r7, [sp]
300001F8  2700     		mov r7, #0 ; 0
300001FA  F8CD 7004		str r7, [sp, #+4]
300001FE  2700     		mov r7, #0 ; 0
30000200  F8CD 7008		str r7, [sp, #+8]
30000204  2700     		mov r7, #0 ; 0
30000206  F8CD 700C		str r7, [sp, #+12]
3000020A  2700     		mov r7, #0 ; 0
3000020C  F8CD 7010		str r7, [sp, #+16]
30000210  2700     		mov r7, #0 ; 0
30000212  F8CD 7014		str r7, [sp, #+20]
30000216  2700     		mov r7, #0 ; 0
30000218  F8CD 7018		str r7, [sp, #+24]
3000021C  F8DF 4010		ldr r4, [pc, #+16] ; 0x806C639
30000220  F044 0401		orr r4, r4, #1
30000224  47A0     		blx r4
30000226  B008     		add sp, sp, #32

#10			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
30000228  F8DF 7008		ldr r7, [pc, #+8] ; 0x24002BC7
3000022C  7038     		strb r0, [r7]

3000022E  E005     		b #10

30000230  FFFFFFFF		; 0x0806C639
30000234  24002BC7		; 0x24002BC7
30000238  24002BD4		; 0x24002BD4

END_PROGRAM
**************************************************
	List program: $$IOConfig
**************************************************

PROGRAM $$IOConfig

        VAR
warningsKiller : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:$$IOConfig}
#1		(*$WAITSWITCH$*)
#2		
#3			(* warningsKiller := sysCfgAnalogRes(16); *)
#4			LDP0		16	{LNXT:4|7|-1}
(-) UDINT
#5			sysCfgAnalogRes	{LNXT:4|7|-1}
(*) USINT
3000023C  2010     		mov r0, #16 ; 16
3000023E  F8DF 40BC		ldr r4, [pc, #+188] ; 0x80733E9
30000242  F044 0401		orr r4, r4, #1
30000246  47A0     		blx r4

#6			ST		warningsKiller	{LNXT:4|7|-1}
(*) BOOL
30000248  F8DF 70B8		ldr r7, [pc, #+184] ; 0x24002BC4
3000024C  7038     		strb r0, [r7]

#7		
#8			(* warningsKiller := sysCfgProgInput(0, 0); *)
#9			LDP0		0	{LNXT:7|8|-1}
(-) BOOL
#10			sysCfgProgInput		0	{LNXT:7|8|-1}
(*) USINT
3000024E  2000     		mov r0, #0 ; 0
30000250  2100     		mov r1, #0 ; 0
30000252  F8DF 40AC		ldr r4, [pc, #+172] ; 0x80733F5
30000256  F044 0401		orr r4, r4, #1
3000025A  47A0     		blx r4

#11			ST		warningsKiller	{LNXT:7|8|-1}
(*) BOOL
3000025C  F8DF 70A4		ldr r7, [pc, #+164] ; 0x24002BC4
30000260  7038     		strb r0, [r7]

#12		
#13			(* warningsKiller := sysCfgProgInput(1, 0); *)
#14			LDP0		1	{LNXT:8|9|-1}
(-) BOOL
#15			sysCfgProgInput		0	{LNXT:8|9|-1}
(*) USINT
30000262  2001     		mov r0, #1 ; 1
30000264  2100     		mov r1, #0 ; 0
30000266  F8DF 4098		ldr r4, [pc, #+152] ; 0x80733F5
3000026A  F044 0401		orr r4, r4, #1
3000026E  47A0     		blx r4

#16			ST		warningsKiller	{LNXT:8|9|-1}
(*) BOOL
30000270  F8DF 7090		ldr r7, [pc, #+144] ; 0x24002BC4
30000274  7038     		strb r0, [r7]

#17		
#18			(* warningsKiller := sysCfgProgInput(2, 0); *)
#19			LDP0		2	{LNXT:9|10|-1}
(-) BOOL
#20			sysCfgProgInput		0	{LNXT:9|10|-1}
(*) USINT
30000276  2002     		mov r0, #2 ; 2
30000278  2100     		mov r1, #0 ; 0
3000027A  F8DF 4084		ldr r4, [pc, #+132] ; 0x80733F5
3000027E  F044 0401		orr r4, r4, #1
30000282  47A0     		blx r4

#21			ST		warningsKiller	{LNXT:9|10|-1}
(*) BOOL
30000284  F8DF 707C		ldr r7, [pc, #+124] ; 0x24002BC4
30000288  7038     		strb r0, [r7]

#22		
#23			(* warningsKiller := sysCfgProgInput(3, 0); *)
#24			LDP0		3	{LNXT:10|11|-1}
(-) BOOL
#25			sysCfgProgInput		0	{LNXT:10|11|-1}
(*) USINT
3000028A  2003     		mov r0, #3 ; 3
3000028C  2100     		mov r1, #0 ; 0
3000028E  F8DF 4070		ldr r4, [pc, #+112] ; 0x80733F5
30000292  F044 0401		orr r4, r4, #1
30000296  47A0     		blx r4

#26			ST		warningsKiller	{LNXT:10|11|-1}
(*) BOOL
30000298  F8DF 7068		ldr r7, [pc, #+104] ; 0x24002BC4
3000029C  7038     		strb r0, [r7]

#27		
#28			(* warningsKiller := sysCfgProgInput(4, 0); *)
#29			LDP0		4	{LNXT:11|12|-1}
(-) BOOL
#30			sysCfgProgInput		0	{LNXT:11|12|-1}
(*) USINT
3000029E  2004     		mov r0, #4 ; 4
300002A0  2100     		mov r1, #0 ; 0
300002A2  F8DF 405C		ldr r4, [pc, #+92] ; 0x80733F5
300002A6  F044 0401		orr r4, r4, #1
300002AA  47A0     		blx r4

#31			ST		warningsKiller	{LNXT:11|12|-1}
(*) BOOL
300002AC  F8DF 7054		ldr r7, [pc, #+84] ; 0x24002BC4
300002B0  7038     		strb r0, [r7]

#32		
#33			(* warningsKiller := sysCfgProgInput(5, 0); *)
#34			LDP0		5	{LNXT:12|13|-1}
(-) BOOL
#35			sysCfgProgInput		0	{LNXT:12|13|-1}
(*) USINT
300002B2  2005     		mov r0, #5 ; 5
300002B4  2100     		mov r1, #0 ; 0
300002B6  F8DF 4048		ldr r4, [pc, #+72] ; 0x80733F5
300002BA  F044 0401		orr r4, r4, #1
300002BE  47A0     		blx r4

#36			ST		warningsKiller	{LNXT:12|13|-1}
(*) BOOL
300002C0  F8DF 7040		ldr r7, [pc, #+64] ; 0x24002BC4
300002C4  7038     		strb r0, [r7]

#37		
#38			(* warningsKiller := sysCfgProgInput(6, 0); *)
#39			LDP0		6	{LNXT:13|14|-1}
(-) BOOL
#40			sysCfgProgInput		0	{LNXT:13|14|-1}
(*) USINT
300002C6  2006     		mov r0, #6 ; 6
300002C8  2100     		mov r1, #0 ; 0
300002CA  F8DF 4034		ldr r4, [pc, #+52] ; 0x80733F5
300002CE  F044 0401		orr r4, r4, #1
300002D2  47A0     		blx r4

#41			ST		warningsKiller	{LNXT:13|14|-1}
(*) BOOL
300002D4  F8DF 702C		ldr r7, [pc, #+44] ; 0x24002BC4
300002D8  7038     		strb r0, [r7]

#42		
#43			(* warningsKiller := sysCfgProgInput(7, 0); *)
#44			LDP0		7	{LNXT:14|4|-1}
(-) BOOL
#45			sysCfgProgInput		0	{LNXT:14|4|-1}
(*) USINT
300002DA  2007     		mov r0, #7 ; 7
300002DC  2100     		mov r1, #0 ; 0
300002DE  F8DF 4020		ldr r4, [pc, #+32] ; 0x80733F5
300002E2  F044 0401		orr r4, r4, #1
300002E6  47A0     		blx r4

#46			ST		warningsKiller	{LNXT:14|4|-1}
(*) BOOL
300002E8  F8DF 7018		ldr r7, [pc, #+24] ; 0x24002BC4
300002EC  7038     		strb r0, [r7]

300002EE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300002F2  F8DD E000		ldr lr, [sp]
300002F6  B002     		add sp, sp, #8

300002F8  4770     		bx lr

300002FC  FFFFFFFF		; 0x080733E9
30000300  FFFFFFFF		; 0x080733F5
30000304  24002BC4		; 0x24002BC4

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
30000308  4770     		bx lr


*** OUTPUT:
3000030A  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

3000030C  B082     		sub sp, sp, #8
3000030E  F8CD E000		str lr, [sp]
30000312  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000316  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000031A  F8DD E000		ldr lr, [sp]
3000031E  B002     		add sp, sp, #8

30000320  4770     		bx lr

**************************************************
	List program: ESTADIO
**************************************************

PROGRAM ESTADIO

        VAR
CONTADOR : CTD;
CTD : CTU;
	END_VAR

END_PROGRAM

30000330  B082     		sub sp, sp, #8
30000332  F8CD E000		str lr, [sp]
30000336  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0			{SRC:ESTADIO}
#1		 
#2		  
#3			(* Network 1 *)
#4			LD		BTN {R:1$0}
(*) UNDEF
3000033A  F8DF 71A4		ldr r7, [pc, #+420] ; 0x2403D750
3000033E  7838     		ldrb r0, [r7]

#5			ST		CTD.CU {R:1$2}
(*) BOOL
30000340  F8DF 7178		ldr r7, [pc, #+376] ; 0x24002BCA
30000344  7038     		strb r0, [r7]

#6			LD		RESET {R:1$5}
(*) UNDEF
30000346  F8DF 716C		ldr r7, [pc, #+364] ; 0x24002BC5
3000034A  7838     		ldrb r0, [r7]

#7			ST		CTD.R {R:1$2}
(*) BOOL
3000034C  F8DF 7170		ldr r7, [pc, #+368] ; 0x24002BCB
30000350  7038     		strb r0, [r7]

#8			MOVE		LOGICA1,CTD.PV {R:1$2}
(*) BOOL
30000352  2001     		mov r0, #1 ; 1
30000354  F8DF 716C		ldr r7, [pc, #+364] ; 0x24002BCC
30000358  8038     		strh r0, [r7]

#9			CAL		CTD {R:1$2}
(*) INT
3000035A  E92D 0021		stmdb sp!, { r0, r5 }
3000035E  F8DF 5158		ldr r5, [pc, #+344] ; 0x24002BC8
30000362  F8DF 4190		ldr r4, [pc, #+400] ; 0x300000E8
30000366  F044 0401		orr r4, r4, #1
3000036A  47A0     		blx r4
3000036C  E8BD 0021		ldmia sp!, { r0, r5 }

#10			LD		CTD.Q {R:1$2}
(*) UNDEF
30000370  F8DF 7154		ldr r7, [pc, #+340] ; 0x24002BCE
30000374  7838     		ldrb r0, [r7]

#11			ST		L1 {R:1$1}
(*) BOOL
30000376  F8DF 7154		ldr r7, [pc, #+340] ; 0x2403D748
3000037A  7038     		strb r0, [r7]

#12			ST		R1 {R:1$6}
(*) BOOL
3000037C  F8DF 7164		ldr r7, [pc, #+356] ; 0x2403D761
30000380  7038     		strb r0, [r7]

#13		 
#14			(* Network 2 *)
#15			LD		BTN {R:2$0}
(*) UNDEF
30000382  F8DF 715C		ldr r7, [pc, #+348] ; 0x2403D750
30000386  7838     		ldrb r0, [r7]

#16			ST		CTD.CU {R:2$2}
(*) BOOL
30000388  F8DF 7130		ldr r7, [pc, #+304] ; 0x24002BCA
3000038C  7038     		strb r0, [r7]

#17			LD		RESET {R:2$5}
(*) UNDEF
3000038E  F8DF 7124		ldr r7, [pc, #+292] ; 0x24002BC5
30000392  7838     		ldrb r0, [r7]

#18			ST		CTD.R {R:2$2}
(*) BOOL
30000394  F8DF 7128		ldr r7, [pc, #+296] ; 0x24002BCB
30000398  7038     		strb r0, [r7]

#19			MOVE		LOGICA2,CTD.PV {R:2$2}
(*) BOOL
3000039A  2002     		mov r0, #2 ; 2
3000039C  F8DF 7124		ldr r7, [pc, #+292] ; 0x24002BCC
300003A0  8038     		strh r0, [r7]

#20			CAL		CTD {R:2$2}
(*) INT
300003A2  E92D 0021		stmdb sp!, { r0, r5 }
300003A6  F8DF 5110		ldr r5, [pc, #+272] ; 0x24002BC8
300003AA  F8DF 4148		ldr r4, [pc, #+328] ; 0x300000E8
300003AE  F044 0401		orr r4, r4, #1
300003B2  47A0     		blx r4
300003B4  E8BD 0021		ldmia sp!, { r0, r5 }

#21			LD		CTD.Q {R:2$2}
(*) UNDEF
300003B8  F8DF 710C		ldr r7, [pc, #+268] ; 0x24002BCE
300003BC  7838     		ldrb r0, [r7]

#22			ST		L2 {R:2$1}
(*) BOOL
300003BE  F8DF 7110		ldr r7, [pc, #+272] ; 0x2403D749
300003C2  7038     		strb r0, [r7]

#23			ST		R2 {R:2$6}
(*) BOOL
300003C4  F8DF 7120		ldr r7, [pc, #+288] ; 0x2403D762
300003C8  7038     		strb r0, [r7]

#24		 
#25			(* Network 3 *)
#26			LD		BTN {R:3$0}
(*) UNDEF
300003CA  F8DF 7114		ldr r7, [pc, #+276] ; 0x2403D750
300003CE  7838     		ldrb r0, [r7]

#27			ST		CTD.CU {R:3$2}
(*) BOOL
300003D0  F8DF 70E8		ldr r7, [pc, #+232] ; 0x24002BCA
300003D4  7038     		strb r0, [r7]

#28			LD		RESET {R:3$5}
(*) UNDEF
300003D6  F8DF 70DC		ldr r7, [pc, #+220] ; 0x24002BC5
300003DA  7838     		ldrb r0, [r7]

#29			ST		CTD.R {R:3$2}
(*) BOOL
300003DC  F8DF 70E0		ldr r7, [pc, #+224] ; 0x24002BCB
300003E0  7038     		strb r0, [r7]

#30			MOVE		LOGICA3,CTD.PV {R:3$2}
(*) BOOL
300003E2  2003     		mov r0, #3 ; 3
300003E4  F8DF 70DC		ldr r7, [pc, #+220] ; 0x24002BCC
300003E8  8038     		strh r0, [r7]

#31			CAL		CTD {R:3$2}
(*) INT
300003EA  E92D 0021		stmdb sp!, { r0, r5 }
300003EE  F8DF 50C8		ldr r5, [pc, #+200] ; 0x24002BC8
300003F2  F8DF 4100		ldr r4, [pc, #+256] ; 0x300000E8
300003F6  F044 0401		orr r4, r4, #1
300003FA  47A0     		blx r4
300003FC  E8BD 0021		ldmia sp!, { r0, r5 }

#32			LD		CTD.Q {R:3$2}
(*) UNDEF
30000400  F8DF 70C4		ldr r7, [pc, #+196] ; 0x24002BCE
30000404  7838     		ldrb r0, [r7]

#33			ST		L3 {R:3$1}
(*) BOOL
30000406  F8DF 70CC		ldr r7, [pc, #+204] ; 0x2403D74A
3000040A  7038     		strb r0, [r7]

#34			ST		R3 {R:3$6}
(*) BOOL
3000040C  F8DF 70DC		ldr r7, [pc, #+220] ; 0x2403D763
30000410  7038     		strb r0, [r7]

#35		 
#36			(* Network 4 *)
#37			LD		BTN {R:4$0}
(*) UNDEF
30000412  F8DF 70CC		ldr r7, [pc, #+204] ; 0x2403D750
30000416  7838     		ldrb r0, [r7]

#38			ST		CTD.CU {R:4$2}
(*) BOOL
30000418  F8DF 70A0		ldr r7, [pc, #+160] ; 0x24002BCA
3000041C  7038     		strb r0, [r7]

#39			LD		RESET {R:4$5}
(*) UNDEF
3000041E  F8DF 7094		ldr r7, [pc, #+148] ; 0x24002BC5
30000422  7838     		ldrb r0, [r7]

#40			ST		CTD.R {R:4$2}
(*) BOOL
30000424  F8DF 7098		ldr r7, [pc, #+152] ; 0x24002BCB
30000428  7038     		strb r0, [r7]

#41			MOVE		LOGICA4,CTD.PV {R:4$2}
(*) BOOL
3000042A  2004     		mov r0, #4 ; 4
3000042C  F8DF 7094		ldr r7, [pc, #+148] ; 0x24002BCC
30000430  8038     		strh r0, [r7]

#42			CAL		CTD {R:4$2}
(*) INT
30000432  E92D 0021		stmdb sp!, { r0, r5 }
30000436  F8DF 5080		ldr r5, [pc, #+128] ; 0x24002BC8
3000043A  F8DF 40B8		ldr r4, [pc, #+184] ; 0x300000E8
3000043E  F044 0401		orr r4, r4, #1
30000442  47A0     		blx r4
30000444  E8BD 0021		ldmia sp!, { r0, r5 }

#43			LD		CTD.Q {R:4$2}
(*) UNDEF
30000448  F8DF 707C		ldr r7, [pc, #+124] ; 0x24002BCE
3000044C  7838     		ldrb r0, [r7]

#44			ST		L4 {R:4$1}
(*) BOOL
3000044E  F8DF 7088		ldr r7, [pc, #+136] ; 0x2403D74B
30000452  7038     		strb r0, [r7]

#45			ST		R4 {R:4$6}
(*) BOOL
30000454  F8DF 7098		ldr r7, [pc, #+152] ; 0x2403D764
30000458  7038     		strb r0, [r7]

#46		 
#47			(* Network 5 *)
#48			LD		BTN {R:5$0}
(*) UNDEF
3000045A  F8DF 7084		ldr r7, [pc, #+132] ; 0x2403D750
3000045E  7838     		ldrb r0, [r7]

#49			ST		CTD.CU {R:5$2}
(*) BOOL
30000460  F8DF 7058		ldr r7, [pc, #+88] ; 0x24002BCA
30000464  7038     		strb r0, [r7]

#50			LD		RESET {R:5$5}
(*) UNDEF
30000466  F8DF 704C		ldr r7, [pc, #+76] ; 0x24002BC5
3000046A  7838     		ldrb r0, [r7]

#51			ST		CTD.R {R:5$2}
(*) BOOL
3000046C  F8DF 7050		ldr r7, [pc, #+80] ; 0x24002BCB
30000470  7038     		strb r0, [r7]

#52			MOVE		LOGICA_RESET,CTD.PV {R:5$2}
(*) BOOL
30000472  2005     		mov r0, #5 ; 5
30000474  F8DF 704C		ldr r7, [pc, #+76] ; 0x24002BCC
30000478  8038     		strh r0, [r7]

#53			CAL		CTD {R:5$2}
(*) INT
3000047A  E92D 0021		stmdb sp!, { r0, r5 }
3000047E  F8DF 5038		ldr r5, [pc, #+56] ; 0x24002BC8
30000482  F8DF 4070		ldr r4, [pc, #+112] ; 0x300000E8
30000486  F044 0401		orr r4, r4, #1
3000048A  47A0     		blx r4
3000048C  E8BD 0021		ldmia sp!, { r0, r5 }

#54			LD		CTD.Q {R:5$2}
(*) UNDEF
30000490  F8DF 7034		ldr r7, [pc, #+52] ; 0x24002BCE
30000494  7838     		ldrb r0, [r7]

#55			ST		LB {R:5$1}
(*) BOOL
30000496  F8DF 7044		ldr r7, [pc, #+68] ; 0x2403D74E
3000049A  7038     		strb r0, [r7]

#56		 
#57			(* Network 6 *)
#58			LD		LB {R:6$0}
(*) UNDEF
3000049C  F8DF 703C		ldr r7, [pc, #+60] ; 0x2403D74E
300004A0  7838     		ldrb r0, [r7]

#59			ST		RESET {R:6$1}
(*) BOOL
300004A2  F8DF 7010		ldr r7, [pc, #+16] ; 0x24002BC5
300004A6  7038     		strb r0, [r7]

300004A8  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300004AC  F8DD E000		ldr lr, [sp]
300004B0  B002     		add sp, sp, #8

300004B2  4770     		bx lr

300004B4  24002BC5		; 0x24002BC5
300004B8  24002BC8		; 0x24002BC8
300004BC  24002BCA		; 0x24002BCA
300004C0  24002BCB		; 0x24002BCB
300004C4  24002BCC		; 0x24002BCC
300004C8  24002BCE		; 0x24002BCE
300004CC  FFFFFFFF		; 0x2403D748
300004D0  FFFFFFFF		; 0x2403D749
300004D4  FFFFFFFF		; 0x2403D74A
300004D8  FFFFFFFF		; 0x2403D74B
300004DC  FFFFFFFF		; 0x2403D74E
300004E0  FFFFFFFF		; 0x2403D750
300004E4  FFFFFFFF		; 0x2403D761
300004E8  FFFFFFFF		; 0x2403D762
300004EC  FFFFFFFF		; 0x2403D763
300004F0  FFFFFFFF		; 0x2403D764
300004F4  300000E8		; 0x300000E8

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
300004F8  4770     		bx lr


*** OUTPUT:
300004FA  4770     		bx lr



**************************************************
	Task Slow init code
**************************************************

300004FC  B082     		sub sp, sp, #8
300004FE  F8CD E000		str lr, [sp]
30000502  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000506  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000050A  F8DD E000		ldr lr, [sp]
3000050E  B002     		add sp, sp, #8

30000510  4770     		bx lr



**************************************************
	Global init code
**************************************************

30000520  B082     		sub sp, sp, #8
30000522  F8CD E000		str lr, [sp]
30000526  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3000052A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000052E  F8DD E000		ldr lr, [sp]
30000532  B002     		add sp, sp, #8

30000534  4770     		bx lr



**************************************************
	Global RETAIN init code
**************************************************

30000536  B082     		sub sp, sp, #8
30000538  F8CD E000		str lr, [sp]
3000053C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000540  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000544  F8DD E000		ldr lr, [sp]
30000548  B002     		add sp, sp, #8

3000054A  4770     		bx lr



**************************************************
	Task $$VirtualTables init code
**************************************************

3000054C  B082     		sub sp, sp, #8
3000054E  F8CD E000		str lr, [sp]
30000552  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000556  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000055A  F8DD E000		ldr lr, [sp]
3000055E  B002     		add sp, sp, #8

30000560  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		0000000030000000h
End code area:            		00000000300006C8h
Code size:                		000006C8h

Start local data area:    		0000000024002BB8h
End local data area:      		0000000024002BDAh
Local data size:          		00000022h

Start retentive data area:		00000000240027B8h
End retentive data area:  		00000000240027B8h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                95535ECD
DEBUG MEMO ID:                          300058B3
FULL MEMO ID:                           00001F83
********************************************
